/**
* AUGVSpawner.cs
* Will responsible for spawning the AUGV/Agent
* To each of available spawnpoints that is being generated by the map.
*/

using UnityEngine;
using System.Collections.Generic;

public class AUGVSpawner : MonoBehaviour {
    public GameObject augvPrefab; // AUGV Prefab
    public MapGenerator mapGenerator; // assign the map generator in inspector
    public List<GameObject> agents; // exposed public agents list

    // Remove Start()
    // Add public SpawnAgents() method
    public void SpawnAgents() {
        if (augvPrefab == null || mapGenerator == null) {
            Debug.LogError("AUGV Prefab or MapGenerator is not assigned.");
            return;
        }
        GameObject spawnContainer = new GameObject("LoadingSpots");
        int i = 1;
        foreach (Vector3 spawnPos in mapGenerator.spawnPoints) {
            GameObject augv = Instantiate(augvPrefab, spawnPos, Quaternion.identity);
            augv.name = "AUGV_" + i;
            agents.Add(augv);
            GameObject spawnPointObj = new GameObject($"AUGV_{i}_Loadingspot");
            spawnPointObj.transform.position = spawnPos;
            spawnPointObj.transform.parent = spawnContainer.transform;
            i++;
        }
    }
    // Public GetSpawnPoint of agent name.
    public Vector3 GetSpawnPoint(string name) {
        var agent = agents.Find(a => a.name == name);
        return agent != null ? agent.transform.position : Vector3.zero;
    }
}
